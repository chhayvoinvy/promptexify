version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: promptexify-postgres
    environment:
      POSTGRES_DB: promptexify
      POSTGRES_USER: promptexify
      POSTGRES_PASSWORD: promptexify_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - promptexify-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U promptexify -d promptexify"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: promptexify-app
    env_file:
      - .env.production.local
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://promptexify:promptexify_password@postgres:5432/promptexify
      - DIRECT_URL=postgresql://promptexify:promptexify_password@postgres:5432/promptexify
      - NEXT_PUBLIC_BASE_URL=https://promptexify.dev
    ports:
      - "3000:3000"
    networks:
      - promptexify-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Nginx Reverse Proxy for SSL
  nginx:
    image: nginx:alpine
    container_name: promptexify-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /Users/chhayvoinvy/.ssl/promptexify.dev:/etc/ssl/certs
    networks:
      - promptexify-network
    depends_on:
      - app
    restart: unless-stopped

  # Redis for caching (optional but recommended for production)
  redis:
    image: redis:7-alpine
    container_name: promptexify-redis
    ports:
      - "6379:6379"
    networks:
      - promptexify-network
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data:

networks:
  promptexify-network:
    driver: bridge
