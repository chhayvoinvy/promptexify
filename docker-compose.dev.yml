services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: promptexify-postgres-dev
    environment:
      POSTGRES_DB: promptexify_dev
      POSTGRES_USER: promptexify_dev
      POSTGRES_PASSWORD: dev_password_123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5433:5432" # Different port to avoid conflicts
    networks:
      - promptexify-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U promptexify_dev -d promptexify_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: promptexify-app-dev
    env_file:
      - .env.production.local
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://promptexify_dev:dev_password_123@postgres:5432/promptexify_dev
      - DIRECT_URL=postgresql://promptexify_dev:dev_password_123@postgres:5432/promptexify_dev
      - NEXT_PUBLIC_BASE_URL=https://promptexify.dev:8443
    ports:
      - "3001:3000" # Different port for the app
    networks:
      - promptexify-dev-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Nginx Reverse Proxy for SSL (using different ports)
  nginx:
    image: nginx:alpine
    container_name: promptexify-nginx-dev
    ports:
      - "8080:80" # HTTP on port 8080
      - "8443:443" # HTTPS on port 8443
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /Users/chhayvoinvy/.ssl/promptexify.dev:/etc/ssl/certs
    networks:
      - promptexify-dev-network
    depends_on:
      - app
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: promptexify-redis-dev
    ports:
      - "6380:6379" # Different port to avoid conflicts
    networks:
      - promptexify-dev-network
    volumes:
      - redis_data_dev:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: promptexify-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@promptexify.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5051:80" # Different port to avoid conflicts
    networks:
      - promptexify-dev-network
    depends_on:
      - postgres
    restart: unless-stopped
    profiles:
      - pgadmin

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: promptexify-redis-commander-dev
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8082:8081" # Different port to avoid conflicts
    networks:
      - promptexify-dev-network
    depends_on:
      - redis
    restart: unless-stopped
    profiles:
      - redis-ui

volumes:
  postgres_data_dev:
  redis_data_dev:

networks:
  promptexify-dev-network:
    driver: bridge
